{"ast":null,"code":"var _jsxFileName = \"/Users/prajwalmahaveera/Documents/FacialRecognitionusingAWS/facial-recognition-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport placeholderImage from './visitors/placeholder.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uuid = require('uuid');\nfunction App() {\n  _s();\n  const [image, setImage] = useState('');\n  const [uploadResultMessage, setUploadResultMessage] = useState('Please upload an image to authenticate.');\n  const [visitorName, setVisitorName] = useState('placeholder.png');\n  const [visitorImagePath, setVisitorImagePath] = useState(placeholderImage);\n  const [isAuth, setAuth] = useState(false);\n  useEffect(() => {\n    setVisitorImagePath(placeholderImage);\n  }, []);\n  function sendImage(e) {\n    e.preventDefault();\n    setVisitorName(image.name);\n    const visitorImageName = uuid.v4();\n    setVisitorImagePath(URL.createObjectURL(image));\n    fetch(`https://mux7t53t2a.execute-api.us-west-1.amazonaws.com/dev/project1-visitor-image-store/${visitorImageName}.jpeg`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'image/jpeg'\n      },\n      body: image,\n      mode: 'cors'\n    }).then(async () => {\n      const response = await authenticate(visitorImageName);\n      if (response.Message === 'Success') {\n        setAuth(true);\n        setUploadResultMessage(`Hi ${response['firstName']} ${response['lastName']}, welcome. Hope you have a great day today.`);\n      } else {\n        setAuth(false);\n        setUploadResultMessage('Authentication Failed: this person is not an employee.');\n      }\n    }).catch(error => {\n      setAuth(false);\n      setUploadResultMessage('There is an error during the authentication. Please try again.');\n      console.error(error);\n    });\n  }\n  async function authenticate(visitorImageName) {\n    const requestUrl = 'https://mux7t53t2a.execute-api.us-west-1.amazonaws.com/dev/employee?' + new URLSearchParams({\n      objectKey: `${visitorImageName}.jpeg`\n    });\n    return await fetch(requestUrl, {\n      method: 'GET',\n      headers: {\n        Accept: 'application.json',\n        'Content-Type': 'application.json'\n      }\n    }).then(response => response.json()).then(data => {\n      return data;\n    }).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Facial Recognition System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: sendImage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitButton\",\n          type: \"submit\",\n          children: \"Authenticate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isAuth ? 'success' : 'failure',\n        children: uploadResultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: visitorImagePath,\n        alt: \"Visitor\",\n        className: \"visitorImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2023 Created by Prajwal Mahaveera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+bs0lzlGrRn1wgBsJEyF4MWKK9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","placeholderImage","jsxDEV","_jsxDEV","uuid","require","App","_s","image","setImage","uploadResultMessage","setUploadResultMessage","visitorName","setVisitorName","visitorImagePath","setVisitorImagePath","isAuth","setAuth","sendImage","e","preventDefault","name","visitorImageName","v4","URL","createObjectURL","fetch","method","headers","body","mode","then","response","authenticate","Message","catch","error","console","requestUrl","URLSearchParams","objectKey","Accept","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","src","alt","_c","$RefreshReg$"],"sources":["/Users/prajwalmahaveera/Documents/FacialRecognitionusingAWS/facial-recognition-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport placeholderImage from './visitors/placeholder.png';\nconst uuid = require('uuid');\n\nfunction App() {\n  const [image, setImage] = useState('');\n  const [uploadResultMessage, setUploadResultMessage] = useState('Please upload an image to authenticate.');\n  const [visitorName, setVisitorName] = useState('placeholder.png');\n  const [visitorImagePath, setVisitorImagePath] = useState(placeholderImage);\n  const [isAuth, setAuth] = useState(false);\n\n  useEffect(() => {\n    setVisitorImagePath(placeholderImage);\n  }, []);\n\n  function sendImage(e) {\n    e.preventDefault();\n    setVisitorName(image.name);\n    const visitorImageName = uuid.v4();\n    setVisitorImagePath(URL.createObjectURL(image));\n\n    fetch(`https://mux7t53t2a.execute-api.us-west-1.amazonaws.com/dev/project1-visitor-image-store/${visitorImageName}.jpeg`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'image/jpeg',\n      },\n      body: image,\n      mode: 'cors',\n    })\n      .then(async () => {\n        const response = await authenticate(visitorImageName);\n        if (response.Message === 'Success') {\n          setAuth(true);\n          setUploadResultMessage(`Hi ${response['firstName']} ${response['lastName']}, welcome. Hope you have a great day today.`);\n        } else {\n          setAuth(false);\n          setUploadResultMessage('Authentication Failed: this person is not an employee.');\n        }\n      })\n      .catch((error) => {\n        setAuth(false);\n        setUploadResultMessage('There is an error during the authentication. Please try again.');\n        console.error(error);\n      });\n  }\n\n  async function authenticate(visitorImageName) {\n    const requestUrl = 'https://mux7t53t2a.execute-api.us-west-1.amazonaws.com/dev/employee?' + new URLSearchParams({\n      objectKey: `${visitorImageName}.jpeg`,\n    });\n    return await fetch(requestUrl, {\n      method: 'GET',\n      headers: {\n        Accept: 'application.json',\n        'Content-Type': 'application.json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .catch((error) => console.error(error));\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Facial Recognition System</h1>\n      </header>\n  \n      <div className=\"container\">\n        <form className=\"form\" onSubmit={sendImage}>\n          <input type=\"file\" name=\"image\" onChange={(e) => setImage(e.target.files[0])} />\n          <button className=\"submitButton\" type=\"submit\">\n            Authenticate\n          </button>\n        </form>\n  \n        <div className={isAuth ? 'success' : 'failure'}>{uploadResultMessage}</div>\n  \n        <img src={visitorImagePath} alt=\"Visitor\" className=\"visitorImage\" />\n      </div>\n  \n      <footer>\n        <p>&copy; 2023 Created by Prajwal Mahaveera</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}